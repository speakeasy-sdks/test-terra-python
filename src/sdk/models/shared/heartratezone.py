"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class HeartRateZoneZoneEnum(str, Enum):
    ZONE_0 = 'ZONE_0'
    ZONE_1 = 'ZONE_1'
    ZONE_2 = 'ZONE_2'
    ZONE_3 = 'ZONE_3'
    ZONE_4 = 'ZONE_4'
    ZONE_5 = 'ZONE_5'
    OTHER = 'OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HeartRateZone:
    
    duration_seconds: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration_seconds'), 'exclude': lambda f: f is None }})
    r"""Duration spent in the hart rate zone"""  
    end_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_percentage'), 'exclude': lambda f: f is None }})
    r"""End percentage (based off user's max HR) of the HR zone"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the associated heart rate zone"""  
    start_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_percentage'), 'exclude': lambda f: f is None }})
    r"""Start percentage (based off user's max HR) of the HR zone"""  
    zone: Optional[HeartRateZoneZoneEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zone'), 'exclude': lambda f: f is None }})  
    