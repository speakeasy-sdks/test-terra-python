"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TSSSample:
    
    actual: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actual'), 'exclude': lambda f: f is None }})
    r"""Achieved Training Stress Score (TSS)"""  
    intensity_factor_actual: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intensity_factor_actual'), 'exclude': lambda f: f is None }})
    r"""Ratio of Normalized Power to Functional Threshold Power (FTP). IF takes into account differences in fitness within or between individuals"""  
    intensity_factor_planned: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intensity_factor_planned'), 'exclude': lambda f: f is None }})
    r"""Planned"""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""Method of measurement of the Training Stress Score"""  
    normalized_power_watts: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('normalized_power_watts'), 'exclude': lambda f: f is None }})
    r"""Adjusted Power calculated using an algorithm that into account the variance between a steady workout and a fluctuating workout. It measures the true physiological demands of a training session. It considers both rapid changes in intensity, as well as critical responses in the body associated with those changes."""  
    planned: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planned'), 'exclude': lambda f: f is None }})
    r"""Planned Training Stress Score (TSS)"""  
    